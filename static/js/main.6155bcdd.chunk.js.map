{"version":3,"sources":["helpers/fetchData.js","components/common-components/Button.js","context.js","components/setup-components/SpaceshipsAmount.js","components/setup-components/AmountSelector.js","components/setup-components/Dropdown.js","components/setup-components/SpaceshipsSelector.js","components/SetupContainer.js","components/output-components/OutliersElement.js","components/output-components/OutliersContainer.js","components/output-components/ElementTextBlock.js","components/output-components/StarshipElement.js","helpers/updateValuesArr.js","components/OutputContainer.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","loading","setLoading","a","results","fetch","res","json","next","replace","previous","push","useEffect","fetchUrl","Button","className","type","value","Context","React","createContext","SpaceshipsAmount","useContext","numSpaceshipsTotal","setNumSpaceshipsShow","setValue","onSubmit","event","preventDefault","min","max","onChange","target","AmountSelector","Dropdown","ID","selectedSpaceships","setSelectedSpaceships","nameList","DEFAULT_VALUE","tempObj","Object","assign","name","map","item","index","key","SpaceshipsSelector","numSpaceshipsShow","setSpaceshipsCompare","i","dropdowns","Array","isArray","values","SetupContainer","OutliersElement","title","OutliersContainer","outliers","isLoaded","setIsLoaded","keys","length","constructor","MGLT","cargo_capacity","cost_in_credits","hyperdrive_rating","max_atmosphering_speed","ElementTextBlock","param","StarshipElement","crew","manufacturer","model","passengers","starship_class","OutputContainer","spaceshipsCompare","valueNames","setOutliers","isLatestLoaded","setIsLatestLoaded","minMax","includes","_","element","section","isNaN","sort","b","filteredElements","App","setNumSpaceshipsTotal","setNameList","extractNames","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6155bcdd.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchUrl() {\r\n    let results = [];\r\n\r\n    while (url !== null) {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      if (data.next !== null) {\r\n        data.next = data.next.replace(/^http:\\/\\//i, 'https://');\r\n      }\r\n      if (data.previous !== null) {\r\n        data.previous = data.previous.replace(/^http:\\/\\//i, 'https://');\r\n      }\r\n      results.push(...data.results);\r\n      url = data.next;\r\n    }\r\n\r\n    setData(results);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n\r\n  return [data, loading];\r\n}\r\n","import React from 'react';\r\n\r\nconst Button = () => {\r\n  return <input className=\"button\" type=\"submit\" value=\"Выбрать\" />;\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Button from '../common-components/Button';\r\n\r\nimport Context from '../../context';\r\n\r\nexport default function SpaceshipsAmount() {\r\n  const { numSpaceshipsTotal, setNumSpaceshipsShow } = useContext(Context);\r\n\r\n  const DEFAULT_VALUE = 2;\r\n  const [value, setValue] = useState(DEFAULT_VALUE);\r\n\r\n  useEffect(() => {\r\n    setNumSpaceshipsShow(DEFAULT_VALUE);\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    setNumSpaceshipsShow(value);\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"input-num-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input-num-field\"\r\n        type=\"number\"\r\n        value={value}\r\n        min={1}\r\n        max={numSpaceshipsTotal}\r\n        onChange={handleChange}\r\n      />\r\n      <Button />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport SpaceshipsAmount from './SpaceshipsAmount';\r\n\r\nconst AmountSelector = () => {\r\n  return (\r\n    <div className=\"amount-selector-container\">\r\n      <div className=\"amount-selector-text\">\r\n        Выберите количество звездолетов для сравнения\r\n      </div>\r\n      <SpaceshipsAmount />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountSelector;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Context from '../../context';\r\n\r\nconst Dropdown = ({ ID, selectedSpaceships, setSelectedSpaceships }) => {\r\n  const { nameList } = useContext(Context);\r\n\r\n  const DEFAULT_VALUE = nameList[0];\r\n  const [value, setValue] = useState(DEFAULT_VALUE);\r\n\r\n  let tempObj = Object.assign(selectedSpaceships, selectedSpaceships);\r\n\r\n  useEffect(() => {\r\n    tempObj[ID] = value;\r\n    setSelectedSpaceships(Object.assign({}, tempObj));\r\n  }, [value]);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      className=\"dropdown\"\r\n      name=\"select\"\r\n      value={value}\r\n      onChange={handleChange}\r\n    >\r\n      {nameList.map((item, index) => (\r\n        <option key={index} value={item}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Dropdown from './Dropdown';\r\nimport Button from '../common-components/Button';\r\n\r\nimport Context from '../../context';\r\n\r\nconst SpaceshipsSelector = () => {\r\n  const { numSpaceshipsShow, nameList, setSpaceshipsCompare } = useContext(\r\n    Context\r\n  );\r\n\r\n  const [selectedSpaceships, setSelectedSpaceships] = useState({});\r\n\r\n  useEffect(() => {\r\n    let tempObj = {};\r\n    for (let i = 0; i < numSpaceshipsShow; i++) {\r\n      tempObj[`element-${i}`] = '';\r\n    }\r\n    setSelectedSpaceships(tempObj);\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSpaceshipsCompare(Object.values(selectedSpaceships));\r\n  };\r\n\r\n  let dropdowns = [];\r\n  for (let i = 0; i < numSpaceshipsShow; i++) {\r\n    dropdowns.push(\r\n      <Dropdown\r\n        ID={`element-${i}`}\r\n        selectedSpaceships={selectedSpaceships}\r\n        setSelectedSpaceships={setSelectedSpaceships}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (Array.isArray(nameList)) {\r\n    return (\r\n      <div className=\"spaceships-selector-container\">\r\n        <div className=\"spaceships-selector-text\">\r\n          Выбрать звездолеты для сравнения\r\n        </div>\r\n        <form className=\"dropdown-form\" onSubmit={handleSubmit}>\r\n          <div className=\"dropdowns-container\">{dropdowns}</div>\r\n          <Button />\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default SpaceshipsSelector;\r\n","import React from 'react';\r\n\r\nimport AmountSelector from './setup-components/AmountSelector';\r\nimport SpaceshipsSelector from './setup-components/SpaceshipsSelector';\r\n\r\nconst SetupContainer = () => {\r\n  return (\r\n    <div className=\"setup-container\">\r\n      <AmountSelector />\r\n      <SpaceshipsSelector />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetupContainer;\r\n","import React from 'react';\r\n\r\nconst OutliersElement = ({ title, max, min }) => {\r\n  return (\r\n    <div>\r\n      <div>{title}</div>\r\n      <div>Max: {max}</div>\r\n      <div>Min: {min}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutliersElement;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport OutliersElement from './OutliersElement';\r\n\r\nconst OutliersContainer = ({ outliers }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(outliers).length !== 0 && outliers.constructor === Object) {\r\n      setIsLoaded(true);\r\n    }\r\n  }, [outliers]);\r\n\r\n  if (isLoaded) {\r\n    return (\r\n      <div>\r\n        <OutliersElement\r\n          title=\"MGLT\"\r\n          max={outliers.MGLT.max}\r\n          min={outliers.MGLT.min}\r\n        />\r\n\r\n        <OutliersElement\r\n          title=\"Cargo Capacity\"\r\n          max={outliers.cargo_capacity.max}\r\n          min={outliers.cargo_capacity.min}\r\n        />\r\n\r\n        <OutliersElement\r\n          title=\"Cost in Credits\"\r\n          max={outliers.cost_in_credits.max}\r\n          min={outliers.cost_in_credits.min}\r\n        />\r\n\r\n        <OutliersElement\r\n          title=\"Hyperdrive Rating\"\r\n          max={outliers.hyperdrive_rating.max}\r\n          min={outliers.hyperdrive_rating.min}\r\n        />\r\n\r\n        <OutliersElement\r\n          title=\"Length\"\r\n          max={outliers.length.max}\r\n          min={outliers.length.min}\r\n        />\r\n\r\n        <OutliersElement\r\n          title=\"Max Atmosphering Speed\"\r\n          max={outliers.max_atmosphering_speed.max}\r\n          min={outliers.max_atmosphering_speed.min}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default OutliersContainer;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst ElementTextBlock = ({ title, param, outliers }) => {\r\n  return (\r\n    <div className=\"starship-element-text\">\r\n      <div className=\"starship-element-title\">{title}</div>\r\n      <div className={`starship-element-characteric`}>{param}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElementTextBlock;\r\n","import React from 'react';\r\n\r\nimport ElementTextBlock from './ElementTextBlock';\r\n\r\nconst StarshipElement = ({\r\n  outliers,\r\n  MGLT,\r\n  cargo_capacity,\r\n  cost_in_credits,\r\n  crew,\r\n  hyperdrive_rating,\r\n  length,\r\n  manufacturer,\r\n  max_atmosphering_speed,\r\n  model,\r\n  name,\r\n  passengers,\r\n  starship_class,\r\n}) => {\r\n  return (\r\n    <div className=\"starship-element\">\r\n      <ElementTextBlock title=\"Name\" param={name} />\r\n      <ElementTextBlock title=\"Model\" param={model} />\r\n      <ElementTextBlock title=\"Manufacturer\" param={manufacturer} />\r\n      <ElementTextBlock title=\"Starship Class\" param={starship_class} />\r\n      <ElementTextBlock title=\"Crew\" param={crew} />\r\n      <ElementTextBlock title=\"Passengers\" param={passengers} />\r\n      <ElementTextBlock\r\n        title=\"Cost In Credits\"\r\n        param={cost_in_credits}\r\n        outliers={outliers.cost_in_credits}\r\n      />\r\n      <ElementTextBlock\r\n        title=\"Length\"\r\n        param={length}\r\n        outliers={outliers.length}\r\n      />\r\n      <ElementTextBlock\r\n        title=\"Cargo Capacity\"\r\n        param={cargo_capacity}\r\n        outliers={outliers.cargo_capacity}\r\n      />\r\n      <ElementTextBlock title=\"MGLT\" param={MGLT} outliers={outliers.MGLT} />\r\n      <ElementTextBlock\r\n        title=\"Max Atmospheric Speed\"\r\n        param={max_atmosphering_speed}\r\n        outliers={outliers.max_atmosphering_speed}\r\n      />\r\n      <ElementTextBlock\r\n        title=\"Hyperdrive Rating\"\r\n        param={hyperdrive_rating}\r\n        outliers={outliers.hyperdrive_rating}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarshipElement;\r\n","let values = {\r\n  MGLT: [],\r\n  cargo_capacity: [],\r\n  cost_in_credits: [],\r\n  hyperdrive_rating: [],\r\n  length: [],\r\n  max_atmosphering_speed: [],\r\n};\r\n\r\nfunction updateValuesArr(element, section) {\r\n  if (!isNaN(element[section])) {\r\n    values[section].push(element[section]);\r\n  }\r\n\r\n  if (values[section].length !== 0) {\r\n    values[section] = values[section].sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n  }\r\n\r\n  return values;\r\n}\r\n\r\nexport { values, updateValuesArr };\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport OutliersContainer from './output-components/OutliersContainer';\r\nimport StarshipElement from './output-components/StarshipElement';\r\n\r\nimport { values, updateValuesArr } from '../helpers/updateValuesArr';\r\nimport Context from '../context';\r\n\r\nfunction OutputContainer() {\r\n  const { data, spaceshipsCompare } = useContext(Context);\r\n\r\n  const valueNames = [\r\n    'MGLT',\r\n    'cargo_capacity',\r\n    'cost_in_credits',\r\n    'hyperdrive_rating',\r\n    'length',\r\n    'max_atmosphering_speed',\r\n  ];\r\n\r\n  const [outliers, setOutliers] = useState({});\r\n  const [isLatestLoaded, setIsLatestLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let minMax = {};\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (spaceshipsCompare.includes(data[i].name)) {\r\n        valueNames.map((name, _) => updateValuesArr(data[i], name));\r\n\r\n        if (data[i].name === spaceshipsCompare[spaceshipsCompare.length - 1]) {\r\n          valueNames.map((name, _) => {\r\n            minMax[name] = {\r\n              max: values[name][values[name].length - 1],\r\n              min: values[name][0],\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    setOutliers(minMax);\r\n  }, [spaceshipsCompare]);\r\n\r\n  useEffect(() => {\r\n    setIsLatestLoaded(true);\r\n  }, [outliers]);\r\n\r\n  let filteredElements = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (spaceshipsCompare.includes(data[i].name)) {\r\n      filteredElements.push(\r\n        <StarshipElement\r\n          outliers={outliers}\r\n          MGLT={data[i].MGLT}\r\n          cargo_capacity={data[i].cargo_capacity}\r\n          cost_in_credits={data[i].cost_in_credits}\r\n          crew={data[i].crew}\r\n          hyperdrive_rating={data[i].hyperdrive_rating}\r\n          length={data[i].length}\r\n          manufacturer={data[i].manufacturer}\r\n          max_atmosphering_speed={data[i].max_atmosphering_speed}\r\n          model={data[i].model}\r\n          name={data[i].name}\r\n          passengers={data[i].passengers}\r\n          starship_class={data[i].starship_class}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  if (isLatestLoaded) {\r\n    return (\r\n      <div className=\"output-container\">\r\n        <OutliersContainer outliers={outliers} />\r\n        <div>{filteredElements}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default OutputContainer;\r\n","import React, { useState, useEffect } from 'react';\nimport './styles/main.scss';\n\nimport useFetch from './helpers/fetchData';\n\nimport SetupContainer from './components/SetupContainer';\nimport OutputContainer from './components/OutputContainer';\n\nimport Context from './context';\n\nexport default function App() {\n  const [numSpaceshipsTotal, setNumSpaceshipsTotal] = useState();\n  const [numSpaceshipsShow, setNumSpaceshipsShow] = useState();\n  const [spaceshipsCompare, setSpaceshipsCompare] = useState([]);\n\n  const [nameList, setNameList] = useState();\n\n  const DATA_LINK = 'https://swapi.dev/api/starships/';\n  const [data, loading] = useFetch(DATA_LINK);\n\n  const extractNames = (data) => {\n    return data.map((item) => item.name);\n  };\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      setNumSpaceshipsTotal(data.length);\n      setNameList(extractNames(data));\n    }\n  }, [loading]);\n\n  return (\n    <Context.Provider\n      value={{\n        data,\n        nameList,\n        numSpaceshipsTotal,\n        numSpaceshipsShow,\n        setNumSpaceshipsShow,\n        spaceshipsCompare,\n        setSpaceshipsCompare,\n      }}\n    >\n      <div className=\"main-container\">\n        <SetupContainer />\n        <OutputContainer />\n      </div>\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}